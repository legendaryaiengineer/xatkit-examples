import library "CanYouTweet/CanYouTweet-Lib.xmi" as CanYouTweetLib
import library "CoreLibrary"
import platform "SlackPlatform"
import platform "TwitterPlatform"
import library "CoreLibrary"

use provider SlackPlatform.SlackIntentProvider

on intent Greetings do
	action SlackPlatform.Reply(message : "Hi, I can help you interact with twitter!\nYou can start with something like `Can you post <whatever you want>?")

on intent Help do
	action SlackPlatform.Reply(message : 'You can try "search for <whatever you want>"')

//----Twitter specific----
on intent PostTweet do
	def content = context(Twitter).get("content") 
	if(content != ""){
		def result = action TwitterPlatform.PostAtweet(content : content)
		
		if(result == 0){
			action SlackPlatform.Reply(message : 'I just tweeted: _' + content + '_ for you.')
		}else{
			action SlackPlatform.Reply(message : "I couldn't tweet that for you right now.")
		}		
	}else{
		action SlackPlatform.Reply(message : "I'm not going to post an empty tweet, look somewhere else")
	}

on intent SearchTweets do
	def contentQuery = context(Twitter).get("query") 
	if(contentQuery != ""){
		def result = action TwitterPlatform.LookForTweets(query : contentQuery)	
		
		if(result == "1"){
			action SlackPlatform.Reply(message : "I couldn't do that search")
		}else{
			if(result == "0"){
				action SlackPlatform.Reply(message : "No results for: _" + contentQuery + "_")
			}else{
				action SlackPlatform.ReplyAttachmentsMessage(attachments : result)
			}
		}		
	}else{
		action SlackPlatform.Reply(message : "I can't search for that")
	}

on intent SendDM do
	if(context(Twitter).get("user") != ""){
		action SlackPlatform.Reply(message : "Ok, so you want to send a DM to *@" + context(Twitter).get("user") + "*")
		action SlackPlatform.Reply(message : 'Write "DM content:" and then add what you want to say to him/her in double quotes.')
	}else{
		action SlackPlatform.Reply(message : "I don't know anyone by that name")
	}

on intent SpecifyDM do
	def DMcontent = context(Twitter).get("text")
	if(DMcontent != ""){
		def result = action TwitterPlatform.SendDM(user : context(Twitter).get("user"), text : DMcontent)	
		if(result == 0){
			action SlackPlatform.Reply(message : 'Message Sent! :smile:')
		}else{
			action SlackPlatform.Reply(message : "I couldn't send it :upside_down_face:")
		}		
	}else{
		action SlackPlatform.Reply(message : "I'm not going to send that")
	}
	
on intent ReceiveDM do
	def result = action TwitterPlatform.ReceiveDM
	if (result == "1"){
		action SlackPlatform.Reply(message : "I couldn't retrieve any message, try again later. :upside_down_face:")
	}else{
		if(result == "0"){
			action SlackPlatform.Reply(message : "There are no messages...")
		}else{
			action SlackPlatform.ReplyAttachmentsMessage(attachments : result)	
		}
	}

on intent GetTrends do
	if(context(Twitter).get("woeid") != ""){
		def result = action TwitterPlatform.GetTrends(woeid : context(Twitter).get("woeid"))
		def noResultsMessage = "No trending topics where found for the WOEID: " + context(Twitter).get("woeid")
	}else {
		if (context(Twitter).get("locationName") != ""){
			def result = action TwitterPlatform.GetTrends(locationName : context(Twitter).get("locationName"))
			def noResultsMessage = "No trending topics where found for the location with name: " + context(Twitter).get("locationName")
		}else {
			def result = action TwitterPlatform.GetTrends
			def noResultsMessage = "No trending topics where found worldwide"
		}
	}
	if (result == "1"){
		action SlackPlatform.Reply(message : "An error occurred while trying to retrieve the ternding topics, try again later. :upside_down_face:")
	}else{
		if(result == "0"){
			action SlackPlatform.Reply(message : noResultsMessage)
		}else{
			action SlackPlatform.ReplyAttachmentsMessage(attachments : result)	
		}
	}
	
on intent Default_Fallback_Intent do
	action SlackPlatform.Reply(message : "Sorry I'll have to check that on my dictionary and get back to you later :(")
	