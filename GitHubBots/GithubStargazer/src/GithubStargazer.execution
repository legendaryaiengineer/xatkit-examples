import platform "GithubPlatform"
import platform "SlackPlatform"

use provider GithubPlatform.GithubWebhookEventProvider

Init {
	Next {
		event == Star_Created --> HandleNewStar
		event == Star_Deleted --> HandleDeletedStar
	}
}

HandleNewStar {
	Body {
		val starContext = context.get("star")
		SlackPlatform.PostMessage(":tada: New star on <" + starContext.get("repository->html_url") + " | " + starContext.get("repository->name") + "> by <" + starContext.get("sender->html_url") + " | " + starContext.get("sender->login") + "> :confetti_ball:\nCurrent stargazers count: " + starContext.get("repository->stargazers_count") + ":clap::champagne:", config.get("slack.channel") as String)
	}
	Next {
		_ --> Init
	}
}

HandleDeletedStar {
	Body {
		val starContext = context.get("star")
		SlackPlatform.PostMessage(":sob: <" + starContext.get("sender->html_url") + " | " + starContext.get("sender->login") + "> unstarred <" + starContext.get("repository->html_url") + " | " + starContext.get("repository->name") + "> :face_with_head_bandage: let's forget about it and build awesome features! :kissing_heart:\nCurrent stargazer count: " + starContext.get("repository->stargazers_count") + ":stars:", config.get("slack.channel") as String)
	}
	Next {
		_ --> Init
	}
}

Default_Fallback {
	Body {
		
	}
}


	